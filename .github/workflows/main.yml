name: Lint and Test

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  linter:
    # Run linter once on the latest Ubuntu and a modern Python
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Install uv and Python
        id: setup-uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: "3.11"
          enable-cache: true
      - name: Signal if cache restored
        if: steps.setup-uv.outputs.cache-hit == 'true'
        run: echo "Cache was restored"
      - name: Install dev dependencies
        run: uv pip install -e .[dev]
      - name: Run linter
        run: uv run ruff check

  test:
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        protobuf-major: [3, 4, 5, 6]
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Install uv and Python
        id: setup-uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
      - name: Signal if cache restored
        if: steps.setup-uv.outputs.cache-hit == 'true'
        run: echo "Cache was restored"
      - name: Install Dependencies (with pinned protobuf)
        run: |
          # Constrain protobuf to the selected major version
          if [ "${{ matrix.protobuf-major }}" = "3" ]; then CONSTRAINT='protobuf>=3,<4'; fi
          if [ "${{ matrix.protobuf-major }}" = "4" ]; then CONSTRAINT='protobuf>=4,<5'; fi
          if [ "${{ matrix.protobuf-major }}" = "5" ]; then CONSTRAINT='protobuf>=5,<6'; fi
          if [ "${{ matrix.protobuf-major }}" = "6" ]; then CONSTRAINT='protobuf>=6,<7'; fi
          uv pip install -e .[dev] "$CONSTRAINT"
      - name: Run Tests
        run: uv run pytest -q
